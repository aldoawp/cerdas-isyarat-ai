{
  "model_info": {
    "name": "BISINDO Alphabet Recognition",
    "version": "1.0",
    "description": "Random Forest model for BISINDO alphabet recognition",
    "input_features": 50,
    "output_classes": 26,
    "classes": [
      "A",
      "B",
      "C",
      "D",
      "E",
      "F",
      "G",
      "H",
      "I",
      "J",
      "K",
      "L",
      "M",
      "N",
      "O",
      "P",
      "Q",
      "R",
      "S",
      "T",
      "U",
      "V",
      "W",
      "X",
      "Y",
      "Z"
    ],
    "feature_names": [
      "hand_1_distance_0",
      "hand_1_distance_1",
      "hand_1_distance_2",
      "hand_1_distance_3",
      "hand_1_distance_4",
      "hand_1_distance_5",
      "hand_1_distance_6",
      "hand_1_distance_7",
      "hand_1_distance_8",
      "hand_1_distance_9",
      "hand_1_angle_0",
      "hand_1_angle_1",
      "hand_1_angle_2",
      "hand_1_angle_3",
      "hand_1_angle_4",
      "hand_1_angle_5",
      "hand_1_angle_6",
      "hand_1_angle_7",
      "hand_1_angle_8",
      "hand_1_angle_9",
      "hand_1_angle_10",
      "hand_1_angle_11",
      "hand_1_angle_12",
      "hand_1_angle_13",
      "hand_1_angle_14",
      "hand_1_area",
      "hand_1_perimeter",
      "hand_1_finger_0",
      "hand_1_finger_1",
      "hand_1_finger_2",
      "hand_1_finger_3",
      "hand_1_finger_4",
      "hand_1_orientation_0",
      "hand_1_orientation_1",
      "hand_1_orientation_2",
      "hand_2_distance_0",
      "hand_2_distance_1",
      "hand_2_distance_2",
      "hand_2_distance_3",
      "hand_2_distance_4",
      "hand_2_distance_5",
      "hand_2_distance_6",
      "hand_2_distance_7",
      "hand_2_distance_8",
      "hand_2_distance_9",
      "hand_2_angle_0",
      "hand_2_angle_1",
      "hand_2_angle_2",
      "hand_2_angle_3",
      "hand_2_angle_4"
    ]
  },
  "preprocessing": {
    "scaler_used": true,
    "input_normalization": "Required if scaler is used"
  },
  "usage": {
    "input_shape": [
      1,
      50
    ],
    "input_type": "float32",
    "output_type": "float32"
  }
}